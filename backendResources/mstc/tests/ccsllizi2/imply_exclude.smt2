(set-option :print-success false)
(set-option :produce-models true)
(set-logic AUFLIRA)
(declare-fun n () Int)
(assert (= n 10))
(declare-fun d () Int)
(assert (> d 0))
(declare-fun t_state2.s (Int) Bool)
(declare-fun h_state2.s (Int) Int)
(assert (= (h_state2.s 1) 0))
(assert (ite (t_state2.s 1) (= (h_state2.s 2) (+ (h_state2.s 1) 1)) (= (h_state2.s 2) (h_state2.s 1))))
(assert (ite (t_state2.s 2) (= (h_state2.s 3) (+ (h_state2.s 2) 1)) (= (h_state2.s 3) (h_state2.s 2))))
(assert (ite (t_state2.s 3) (= (h_state2.s 4) (+ (h_state2.s 3) 1)) (= (h_state2.s 4) (h_state2.s 3))))
(assert (ite (t_state2.s 4) (= (h_state2.s 5) (+ (h_state2.s 4) 1)) (= (h_state2.s 5) (h_state2.s 4))))
(assert (ite (t_state2.s 5) (= (h_state2.s 6) (+ (h_state2.s 5) 1)) (= (h_state2.s 6) (h_state2.s 5))))
(assert (ite (t_state2.s 6) (= (h_state2.s 7) (+ (h_state2.s 6) 1)) (= (h_state2.s 7) (h_state2.s 6))))
(assert (ite (t_state2.s 7) (= (h_state2.s 8) (+ (h_state2.s 7) 1)) (= (h_state2.s 8) (h_state2.s 7))))
(assert (ite (t_state2.s 8) (= (h_state2.s 9) (+ (h_state2.s 8) 1)) (= (h_state2.s 9) (h_state2.s 8))))
(assert (ite (t_state2.s 9) (= (h_state2.s 10) (+ (h_state2.s 9) 1)) (= (h_state2.s 10) (h_state2.s 9))))
(assert (ite (t_state2.s 10) (= (h_state2.s 11) (+ (h_state2.s 10) 1)) (= (h_state2.s 11) (h_state2.s 10))))
(declare-fun t_state1.s (Int) Bool)
(declare-fun h_state1.s (Int) Int)
(assert (= (h_state1.s 1) 0))
(assert (ite (t_state1.s 1) (= (h_state1.s 2) (+ (h_state1.s 1) 1)) (= (h_state1.s 2) (h_state1.s 1))))
(assert (ite (t_state1.s 2) (= (h_state1.s 3) (+ (h_state1.s 2) 1)) (= (h_state1.s 3) (h_state1.s 2))))
(assert (ite (t_state1.s 3) (= (h_state1.s 4) (+ (h_state1.s 3) 1)) (= (h_state1.s 4) (h_state1.s 3))))
(assert (ite (t_state1.s 4) (= (h_state1.s 5) (+ (h_state1.s 4) 1)) (= (h_state1.s 5) (h_state1.s 4))))
(assert (ite (t_state1.s 5) (= (h_state1.s 6) (+ (h_state1.s 5) 1)) (= (h_state1.s 6) (h_state1.s 5))))
(assert (ite (t_state1.s 6) (= (h_state1.s 7) (+ (h_state1.s 6) 1)) (= (h_state1.s 7) (h_state1.s 6))))
(assert (ite (t_state1.s 7) (= (h_state1.s 8) (+ (h_state1.s 7) 1)) (= (h_state1.s 8) (h_state1.s 7))))
(assert (ite (t_state1.s 8) (= (h_state1.s 9) (+ (h_state1.s 8) 1)) (= (h_state1.s 9) (h_state1.s 8))))
(assert (ite (t_state1.s 9) (= (h_state1.s 10) (+ (h_state1.s 9) 1)) (= (h_state1.s 10) (h_state1.s 9))))
(assert (ite (t_state1.s 10) (= (h_state1.s 11) (+ (h_state1.s 10) 1)) (= (h_state1.s 11) (h_state1.s 10))))
(declare-fun t_state1.f (Int) Bool)
(declare-fun h_state1.f (Int) Int)
(assert (= (h_state1.f 1) 0))
(assert (ite (t_state1.f 1) (= (h_state1.f 2) (+ (h_state1.f 1) 1)) (= (h_state1.f 2) (h_state1.f 1))))
(assert (ite (t_state1.f 2) (= (h_state1.f 3) (+ (h_state1.f 2) 1)) (= (h_state1.f 3) (h_state1.f 2))))
(assert (ite (t_state1.f 3) (= (h_state1.f 4) (+ (h_state1.f 3) 1)) (= (h_state1.f 4) (h_state1.f 3))))
(assert (ite (t_state1.f 4) (= (h_state1.f 5) (+ (h_state1.f 4) 1)) (= (h_state1.f 5) (h_state1.f 4))))
(assert (ite (t_state1.f 5) (= (h_state1.f 6) (+ (h_state1.f 5) 1)) (= (h_state1.f 6) (h_state1.f 5))))
(assert (ite (t_state1.f 6) (= (h_state1.f 7) (+ (h_state1.f 6) 1)) (= (h_state1.f 7) (h_state1.f 6))))
(assert (ite (t_state1.f 7) (= (h_state1.f 8) (+ (h_state1.f 7) 1)) (= (h_state1.f 8) (h_state1.f 7))))
(assert (ite (t_state1.f 8) (= (h_state1.f 9) (+ (h_state1.f 8) 1)) (= (h_state1.f 9) (h_state1.f 8))))
(assert (ite (t_state1.f 9) (= (h_state1.f 10) (+ (h_state1.f 9) 1)) (= (h_state1.f 10) (h_state1.f 9))))
(assert (ite (t_state1.f 10) (= (h_state1.f 11) (+ (h_state1.f 10) 1)) (= (h_state1.f 11) (h_state1.f 10))))
(declare-fun t_state2.f (Int) Bool)
(declare-fun h_state2.f (Int) Int)
(assert (= (h_state2.f 1) 0))
(assert (ite (t_state2.f 1) (= (h_state2.f 2) (+ (h_state2.f 1) 1)) (= (h_state2.f 2) (h_state2.f 1))))
(assert (ite (t_state2.f 2) (= (h_state2.f 3) (+ (h_state2.f 2) 1)) (= (h_state2.f 3) (h_state2.f 2))))
(assert (ite (t_state2.f 3) (= (h_state2.f 4) (+ (h_state2.f 3) 1)) (= (h_state2.f 4) (h_state2.f 3))))
(assert (ite (t_state2.f 4) (= (h_state2.f 5) (+ (h_state2.f 4) 1)) (= (h_state2.f 5) (h_state2.f 4))))
(assert (ite (t_state2.f 5) (= (h_state2.f 6) (+ (h_state2.f 5) 1)) (= (h_state2.f 6) (h_state2.f 5))))
(assert (ite (t_state2.f 6) (= (h_state2.f 7) (+ (h_state2.f 6) 1)) (= (h_state2.f 7) (h_state2.f 6))))
(assert (ite (t_state2.f 7) (= (h_state2.f 8) (+ (h_state2.f 7) 1)) (= (h_state2.f 8) (h_state2.f 7))))
(assert (ite (t_state2.f 8) (= (h_state2.f 9) (+ (h_state2.f 8) 1)) (= (h_state2.f 9) (h_state2.f 8))))
(assert (ite (t_state2.f 9) (= (h_state2.f 10) (+ (h_state2.f 9) 1)) (= (h_state2.f 10) (h_state2.f 9))))
(assert (ite (t_state2.f 10) (= (h_state2.f 11) (+ (h_state2.f 10) 1)) (= (h_state2.f 11) (h_state2.f 10))))
(declare-fun t_tmp_1 (Int) Bool)
(declare-fun h_tmp_1 (Int) Int)
(assert (= (h_tmp_1 1) 0))
(assert (ite (t_tmp_1 1) (= (h_tmp_1 2) (+ (h_tmp_1 1) 1)) (= (h_tmp_1 2) (h_tmp_1 1))))
(assert (ite (t_tmp_1 2) (= (h_tmp_1 3) (+ (h_tmp_1 2) 1)) (= (h_tmp_1 3) (h_tmp_1 2))))
(assert (ite (t_tmp_1 3) (= (h_tmp_1 4) (+ (h_tmp_1 3) 1)) (= (h_tmp_1 4) (h_tmp_1 3))))
(assert (ite (t_tmp_1 4) (= (h_tmp_1 5) (+ (h_tmp_1 4) 1)) (= (h_tmp_1 5) (h_tmp_1 4))))
(assert (ite (t_tmp_1 5) (= (h_tmp_1 6) (+ (h_tmp_1 5) 1)) (= (h_tmp_1 6) (h_tmp_1 5))))
(assert (ite (t_tmp_1 6) (= (h_tmp_1 7) (+ (h_tmp_1 6) 1)) (= (h_tmp_1 7) (h_tmp_1 6))))
(assert (ite (t_tmp_1 7) (= (h_tmp_1 8) (+ (h_tmp_1 7) 1)) (= (h_tmp_1 8) (h_tmp_1 7))))
(assert (ite (t_tmp_1 8) (= (h_tmp_1 9) (+ (h_tmp_1 8) 1)) (= (h_tmp_1 9) (h_tmp_1 8))))
(assert (ite (t_tmp_1 9) (= (h_tmp_1 10) (+ (h_tmp_1 9) 1)) (= (h_tmp_1 10) (h_tmp_1 9))))
(assert (ite (t_tmp_1 10) (= (h_tmp_1 11) (+ (h_tmp_1 10) 1)) (= (h_tmp_1 11) (h_tmp_1 10))))
(declare-fun t_tmp_2 (Int) Bool)
(declare-fun h_tmp_2 (Int) Int)
(assert (= (h_tmp_2 1) 0))
(assert (ite (t_tmp_2 1) (= (h_tmp_2 2) (+ (h_tmp_2 1) 1)) (= (h_tmp_2 2) (h_tmp_2 1))))
(assert (ite (t_tmp_2 2) (= (h_tmp_2 3) (+ (h_tmp_2 2) 1)) (= (h_tmp_2 3) (h_tmp_2 2))))
(assert (ite (t_tmp_2 3) (= (h_tmp_2 4) (+ (h_tmp_2 3) 1)) (= (h_tmp_2 4) (h_tmp_2 3))))
(assert (ite (t_tmp_2 4) (= (h_tmp_2 5) (+ (h_tmp_2 4) 1)) (= (h_tmp_2 5) (h_tmp_2 4))))
(assert (ite (t_tmp_2 5) (= (h_tmp_2 6) (+ (h_tmp_2 5) 1)) (= (h_tmp_2 6) (h_tmp_2 5))))
(assert (ite (t_tmp_2 6) (= (h_tmp_2 7) (+ (h_tmp_2 6) 1)) (= (h_tmp_2 7) (h_tmp_2 6))))
(assert (ite (t_tmp_2 7) (= (h_tmp_2 8) (+ (h_tmp_2 7) 1)) (= (h_tmp_2 8) (h_tmp_2 7))))
(assert (ite (t_tmp_2 8) (= (h_tmp_2 9) (+ (h_tmp_2 8) 1)) (= (h_tmp_2 9) (h_tmp_2 8))))
(assert (ite (t_tmp_2 9) (= (h_tmp_2 10) (+ (h_tmp_2 9) 1)) (= (h_tmp_2 10) (h_tmp_2 9))))
(assert (ite (t_tmp_2 10) (= (h_tmp_2 11) (+ (h_tmp_2 10) 1)) (= (h_tmp_2 11) (h_tmp_2 10))))
(declare-fun t_tmp_3 (Int) Bool)
(declare-fun h_tmp_3 (Int) Int)
(assert (= (h_tmp_3 1) 0))
(assert (ite (t_tmp_3 1) (= (h_tmp_3 2) (+ (h_tmp_3 1) 1)) (= (h_tmp_3 2) (h_tmp_3 1))))
(assert (ite (t_tmp_3 2) (= (h_tmp_3 3) (+ (h_tmp_3 2) 1)) (= (h_tmp_3 3) (h_tmp_3 2))))
(assert (ite (t_tmp_3 3) (= (h_tmp_3 4) (+ (h_tmp_3 3) 1)) (= (h_tmp_3 4) (h_tmp_3 3))))
(assert (ite (t_tmp_3 4) (= (h_tmp_3 5) (+ (h_tmp_3 4) 1)) (= (h_tmp_3 5) (h_tmp_3 4))))
(assert (ite (t_tmp_3 5) (= (h_tmp_3 6) (+ (h_tmp_3 5) 1)) (= (h_tmp_3 6) (h_tmp_3 5))))
(assert (ite (t_tmp_3 6) (= (h_tmp_3 7) (+ (h_tmp_3 6) 1)) (= (h_tmp_3 7) (h_tmp_3 6))))
(assert (ite (t_tmp_3 7) (= (h_tmp_3 8) (+ (h_tmp_3 7) 1)) (= (h_tmp_3 8) (h_tmp_3 7))))
(assert (ite (t_tmp_3 8) (= (h_tmp_3 9) (+ (h_tmp_3 8) 1)) (= (h_tmp_3 9) (h_tmp_3 8))))
(assert (ite (t_tmp_3 9) (= (h_tmp_3 10) (+ (h_tmp_3 9) 1)) (= (h_tmp_3 10) (h_tmp_3 9))))
(assert (ite (t_tmp_3 10) (= (h_tmp_3 11) (+ (h_tmp_3 10) 1)) (= (h_tmp_3 11) (h_tmp_3 10))))
(declare-fun t_tmp_4 (Int) Bool)
(declare-fun h_tmp_4 (Int) Int)
(assert (= (h_tmp_4 1) 0))
(assert (ite (t_tmp_4 1) (= (h_tmp_4 2) (+ (h_tmp_4 1) 1)) (= (h_tmp_4 2) (h_tmp_4 1))))
(assert (ite (t_tmp_4 2) (= (h_tmp_4 3) (+ (h_tmp_4 2) 1)) (= (h_tmp_4 3) (h_tmp_4 2))))
(assert (ite (t_tmp_4 3) (= (h_tmp_4 4) (+ (h_tmp_4 3) 1)) (= (h_tmp_4 4) (h_tmp_4 3))))
(assert (ite (t_tmp_4 4) (= (h_tmp_4 5) (+ (h_tmp_4 4) 1)) (= (h_tmp_4 5) (h_tmp_4 4))))
(assert (ite (t_tmp_4 5) (= (h_tmp_4 6) (+ (h_tmp_4 5) 1)) (= (h_tmp_4 6) (h_tmp_4 5))))
(assert (ite (t_tmp_4 6) (= (h_tmp_4 7) (+ (h_tmp_4 6) 1)) (= (h_tmp_4 7) (h_tmp_4 6))))
(assert (ite (t_tmp_4 7) (= (h_tmp_4 8) (+ (h_tmp_4 7) 1)) (= (h_tmp_4 8) (h_tmp_4 7))))
(assert (ite (t_tmp_4 8) (= (h_tmp_4 9) (+ (h_tmp_4 8) 1)) (= (h_tmp_4 9) (h_tmp_4 8))))
(assert (ite (t_tmp_4 9) (= (h_tmp_4 10) (+ (h_tmp_4 9) 1)) (= (h_tmp_4 10) (h_tmp_4 9))))
(assert (ite (t_tmp_4 10) (= (h_tmp_4 11) (+ (h_tmp_4 10) 1)) (= (h_tmp_4 11) (h_tmp_4 10))))
(declare-fun t_idealClock (Int) Bool)
(declare-fun h_idealClock (Int) Int)
(assert (= (h_idealClock 1) 0))
(assert (ite (t_idealClock 1) (= (h_idealClock 2) (+ (h_idealClock 1) 1)) (= (h_idealClock 2) (h_idealClock 1))))
(assert (ite (t_idealClock 2) (= (h_idealClock 3) (+ (h_idealClock 2) 1)) (= (h_idealClock 3) (h_idealClock 2))))
(assert (ite (t_idealClock 3) (= (h_idealClock 4) (+ (h_idealClock 3) 1)) (= (h_idealClock 4) (h_idealClock 3))))
(assert (ite (t_idealClock 4) (= (h_idealClock 5) (+ (h_idealClock 4) 1)) (= (h_idealClock 5) (h_idealClock 4))))
(assert (ite (t_idealClock 5) (= (h_idealClock 6) (+ (h_idealClock 5) 1)) (= (h_idealClock 6) (h_idealClock 5))))
(assert (ite (t_idealClock 6) (= (h_idealClock 7) (+ (h_idealClock 6) 1)) (= (h_idealClock 7) (h_idealClock 6))))
(assert (ite (t_idealClock 7) (= (h_idealClock 8) (+ (h_idealClock 7) 1)) (= (h_idealClock 8) (h_idealClock 7))))
(assert (ite (t_idealClock 8) (= (h_idealClock 9) (+ (h_idealClock 8) 1)) (= (h_idealClock 9) (h_idealClock 8))))
(assert (ite (t_idealClock 9) (= (h_idealClock 10) (+ (h_idealClock 9) 1)) (= (h_idealClock 10) (h_idealClock 9))))
(assert (ite (t_idealClock 10) (= (h_idealClock 11) (+ (h_idealClock 10) 1)) (= (h_idealClock 11) (h_idealClock 10))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x n)) (= (t_idealClock x) true))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x n)) (or (t_state2.s x) (t_state1.s x) (t_state1.f x) (t_state2.f x) (t_tmp_1 x) (t_tmp_2 x) (t_tmp_3 x) (t_tmp_4 x)))))
(assert (and ( > (h_state2.s 11) 0) (> (h_state1.s 11) 0) (> (h_state1.f 11) 0) (> (h_state2.f 11) 0) (> (h_tmp_1 11) 0) (> (h_tmp_2 11) 0) (> (h_tmp_3 11) 0) (> (h_tmp_4 11) 0)))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x (+ n 1))) (>= (h_state2.s x) (h_state1.s x)))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x (+ n 1))) (>= (h_state1.f x) (h_state2.f x)))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x n)) (= (h_state1.s x) (h_state1.f x)) (not (t_state1.f x)))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x (+ n 1))) (ite (>= (h_state1.s x) 1) (= (h_tmp_1 x) (- (h_state1.s x) 1)) (= (h_tmp_1 x) 0)))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x n)) (= (h_state1.f x) (h_tmp_1 x)) (not (t_tmp_1 x)))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x n)) (= (h_state2.s x) (h_state2.f x)) (not (t_state2.f x)))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x (+ n 1))) (ite (>= (h_state2.s x) 1) (= (h_tmp_2 x) (- (h_state2.s x) 1)) (= (h_tmp_2 x) 0)))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x n)) (= (h_state2.f x) (h_tmp_2 x)) (not (t_tmp_2 x)))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x n)) (= (t_tmp_3 x) (and (t_state2.s x) (exists ((m Int)) (and (>= m 1) (<= m x) (t_state2.s m) (= (- (h_state2.s x) (h_state2.s m)) 1) (>= (- (h_state1.s x) (h_state1.s m)) 1))))))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x (+ n 1))) (>= (h_tmp_3 x) (h_state2.f x)))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x n)) (= (t_tmp_4 x) (and (t_state1.s x) (exists ((m Int)) (and (>= m 1) (<= m x) (t_state1.s m) (= (- (h_state1.s x) (h_state1.s m)) 1) (>= (- (h_state2.s x) (h_state2.s m)) 1))))))))
(assert (forall ((x Int)) (=> (and (>= x 1) (<= x (+ n 1))) (>= (h_tmp_4 x) (h_state1.f x)))))
(check-sat)
(get-value ((t_state2.s 1)))
(get-value ((t_state2.s 2)))
(get-value ((t_state2.s 3)))
(get-value ((t_state2.s 4)))
(get-value ((t_state2.s 5)))
(get-value ((t_state2.s 6)))
(get-value ((t_state2.s 7)))
(get-value ((t_state2.s 8)))
(get-value ((t_state2.s 9)))
(get-value ((t_state2.s 10)))
(get-value ((t_state1.s 1)))
(get-value ((t_state1.s 2)))
(get-value ((t_state1.s 3)))
(get-value ((t_state1.s 4)))
(get-value ((t_state1.s 5)))
(get-value ((t_state1.s 6)))
(get-value ((t_state1.s 7)))
(get-value ((t_state1.s 8)))
(get-value ((t_state1.s 9)))
(get-value ((t_state1.s 10)))
(get-value ((t_state1.f 1)))
(get-value ((t_state1.f 2)))
(get-value ((t_state1.f 3)))
(get-value ((t_state1.f 4)))
(get-value ((t_state1.f 5)))
(get-value ((t_state1.f 6)))
(get-value ((t_state1.f 7)))
(get-value ((t_state1.f 8)))
(get-value ((t_state1.f 9)))
(get-value ((t_state1.f 10)))
(get-value ((t_state2.f 1)))
(get-value ((t_state2.f 2)))
(get-value ((t_state2.f 3)))
(get-value ((t_state2.f 4)))
(get-value ((t_state2.f 5)))
(get-value ((t_state2.f 6)))
(get-value ((t_state2.f 7)))
(get-value ((t_state2.f 8)))
(get-value ((t_state2.f 9)))
(get-value ((t_state2.f 10)))
(get-value ((t_tmp_1 1)))
(get-value ((t_tmp_1 2)))
(get-value ((t_tmp_1 3)))
(get-value ((t_tmp_1 4)))
(get-value ((t_tmp_1 5)))
(get-value ((t_tmp_1 6)))
(get-value ((t_tmp_1 7)))
(get-value ((t_tmp_1 8)))
(get-value ((t_tmp_1 9)))
(get-value ((t_tmp_1 10)))
(get-value ((t_tmp_2 1)))
(get-value ((t_tmp_2 2)))
(get-value ((t_tmp_2 3)))
(get-value ((t_tmp_2 4)))
(get-value ((t_tmp_2 5)))
(get-value ((t_tmp_2 6)))
(get-value ((t_tmp_2 7)))
(get-value ((t_tmp_2 8)))
(get-value ((t_tmp_2 9)))
(get-value ((t_tmp_2 10)))
(get-value ((t_tmp_3 1)))
(get-value ((t_tmp_3 2)))
(get-value ((t_tmp_3 3)))
(get-value ((t_tmp_3 4)))
(get-value ((t_tmp_3 5)))
(get-value ((t_tmp_3 6)))
(get-value ((t_tmp_3 7)))
(get-value ((t_tmp_3 8)))
(get-value ((t_tmp_3 9)))
(get-value ((t_tmp_3 10)))
(get-value ((t_tmp_4 1)))
(get-value ((t_tmp_4 2)))
(get-value ((t_tmp_4 3)))
(get-value ((t_tmp_4 4)))
(get-value ((t_tmp_4 5)))
(get-value ((t_tmp_4 6)))
(get-value ((t_tmp_4 7)))
(get-value ((t_tmp_4 8)))
(get-value ((t_tmp_4 9)))
(get-value ((t_tmp_4 10)))
